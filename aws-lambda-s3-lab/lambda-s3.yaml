AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda acionada por eventos S3 e envia notificação via SNS

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: NotificacoesS3

  SNSEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      Endpoint: thais@coastdigital.com.br
      TopicArn: !Ref NotificationTopic

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaS3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - sns:Publish
                Resource: "*"

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.9
      Environment:
        Variables:
          TOPIC_ARN: !Ref NotificationTopic
      Code:
        ZipFile: |
          import json
          import boto3
          import os

          def handler(event, context):
              s3_info = event['Records'][0]['s3']
              bucket = s3_info['bucket']['name']
              key = s3_info['object']['key']
              message = f"Novo arquivo enviado: {key} no bucket {bucket}"
              sns = boto3.client('sns')
              sns.publish(
                  TopicArn=os.environ['TOPIC_ARN'],
                  Message=message,
                  Subject='Notificação S3'
              )
              return {"status": "Notificação enviada"}

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaFunction
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !GetAtt S3Bucket.Arn

  BucketNotification:
    Type: Custom::BucketNotification
    Properties:
      ServiceToken: !GetAtt LambdaFunction.Arn